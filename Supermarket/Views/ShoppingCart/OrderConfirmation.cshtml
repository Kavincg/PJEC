@model OrderHeader

@{
    ViewData["Title"] = "Order Confirmation";

    // Calculate the current status based on OrderDate and current time
    var orderDate = Model.OrderDate;
    var twoDays = TimeSpan.FromDays(2);
    var fourDays = TimeSpan.FromDays(4);
    var sixDays = TimeSpan.FromDays(6);

    string shipmentStatus = "Placed"; // Default status

    if (DateTime.Now >= orderDate + sixDays)
    {
        shipmentStatus = "Delivered";
    }
    else if (DateTime.Now >= orderDate + fourDays)
    {
        shipmentStatus = "Dispatched";
    }
    else if (DateTime.Now >= orderDate + twoDays)
    {
        shipmentStatus = "Shipped";
    }

    // Determine which stages have "passed" for coloring
    bool placedPassed = true; // Placed is always passed once the order is confirmed
    bool shippedPassed = DateTime.Now >= orderDate + twoDays;
    bool dispatchedPassed = DateTime.Now >= orderDate + fourDays;
    bool deliveredPassed = DateTime.Now >= orderDate + sixDays;
}

<div class="container py-5">
    <div class="card border-0 rounded-4">
        <div class=" text-white py-4 px-4 bg-gradient-header rounded-top-4">
            <h1 class="text-center mb-0 text-3xl  text-gray-800 font-bold">Order Confirmation</h1>
        </div>
        <div class="card-body p-5 text-center">
            <div class="text-success-icon text-6xl mb-4">
                <i class="bi bi-check-circle-fill"></i>
            </div>
            <h2 class="text-4xl font-semibold text-gray-800 mb-3">Thank you for your order!</h2>
            <p class="text-xl text-gray-600 mb-5">Your order has been placed successfully.</p>

            <div class="shipment-progress-tracker mb-5">
                <div class="progress-step @(placedPassed ? "passed" : "")">
                    <div class="icon-circle">
                        <i class="bi bi-box-seam"></i>
                    </div>
                    <span class="step-label">Placed</span>
                </div>
                <div class="progress-line @(shippedPassed ? "passed" : "")"></div>
                <div class="progress-step @(shippedPassed ? "passed" : "")">
                    <div class="icon-circle">
                        <i class="bi bi-truck"></i>
                    </div>
                    <span class="step-label">Shipped</span>
                </div>
                <div class="progress-line @(dispatchedPassed ? "passed" : "")"></div>
                <div class="progress-step @(dispatchedPassed ? "passed" : "")">
                    <div class="icon-circle">
                        <i class="bi bi-send"></i>
                    </div>
                    <span class="step-label">Dispatched</span>
                </div>
                <div class="progress-line @(deliveredPassed ? "passed" : "")"></div>
                <div class="progress-step @(deliveredPassed ? "passed" : "")">
                    <div class="icon-circle">
                        <i class="bi bi-house-door"></i>
                    </div>
                    <span class="step-label">Delivered</span>
                </div>
            </div>

            <div class="bg-light-gray p-4 rounded-lg mb-5 text-left max-w-md mx-auto">
                <p class="text-lg font-medium text-gray-700 mb-2">
                    <strong class="w-32 inline-block">Order ID:</strong> <span class="text-orange-600 font-bold">@Model.Id</span>
                </p>
                <p class="text-lg font-medium text-gray-700 mb-2">
                    <strong class="w-32 inline-block">Order Date:</strong> @Model.OrderDate.ToString("MMMM dd,yyyy HH:mm")
                </p>
                <p class="text-lg font-medium text-gray-700 mb-2">
                    <strong class="w-32 inline-block">Order Total:</strong> @Model.OrderTotal.ToString("C", System.Globalization.CultureInfo.GetCultureInfo("en-IN"))
                </p>
                <p class="text-lg font-medium text-gray-700 mb-2">
                    <strong class="w-32 inline-block">Payment ID:</strong> @(string.IsNullOrEmpty(Model.PaymentIntentId) ? "N/A" : Model.PaymentIntentId)
                </p>
                <p class="text-lg font-medium text-gray-700">
                    <strong class="w-32 inline-block">Current Status:</strong> <span class="font-bold text-success-icon">@shipmentStatus</span>
                </p>
            </div>

            <div class="d-flex justify-content-center gap-3">
                <a asp-controller="Home" asp-action="Index" class="btn bg-gradient-header btn-lg rounded-pill px-5 py-3 shadow-sm hover-scale-105 transition-all text-white">
                    <i class="bi bi-shop me-2"></i> Continue Shopping
                </a>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Any specific JavaScript for this page can go here if needed.
    </script>
}

<style>
    /* Custom Orange for passed states */
    :root {
        --orange-passed-color: rgb(234,80,28); /* The primary orange from your header */
        --orange-passed-line-color: rgba(234,80,28,0.5); /* A lighter shade for the lines */
    }

    .bg-gradient-header {
        background-color: var(--orange-passed-color);
    }

    /* Shipment Progress Tracker Styling */
    .shipment-progress-tracker {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin: 4rem auto; /* Adjusted margin for better spacing */
        max-width: 900px; /* Limit width for larger screens */
        position: relative;
    }

    .progress-step {
        display: flex;
        flex-direction: column;
        align-items: center;
        position: relative;
        z-index: 1; /* Ensure step content is above lines */
        flex-shrink: 0; /* Prevent steps from shrinking */
    }

    .icon-circle {
        width: 60px; /* Larger circles */
        height: 60px;
        background-color: #e9ecef; /* Default gray for circles */
        border-radius: 50%;
        display: flex;
        justify-content: center;
        align-items: center;
        margin-bottom: 0.5rem;
        font-size: 1.8rem; /* Larger icon size */
        color: #6c757d; /* Default icon color */
        transition: background-color 0.3s ease, color 0.3s ease;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1); /* Subtle shadow for depth */
    }

    .progress-step.passed .icon-circle {
        background-color: var(--orange-passed-color);
        color: #fff; /* White icon for passed stages */
    }

    .step-label {
        font-size: 0.95rem; /* Slightly smaller text for labels */
        color: #495057; /* Darker gray for labels */
        font-weight: 500;
        text-align: center;
        transition: color 0.3s ease;
    }

    .progress-step.passed .step-label {
        color: var(--orange-passed-color);
        font-weight: bold; /* Bold the label for passed stages */
    }

    .progress-line {
        flex-grow: 1; /* Allows lines to take up available space */
        height: 4px; /* Thickness of the line */
        background-color: #dee2e6; /* Default gray for lines */
        margin: 0 -20px; /* Overlap with circles to connect them */
        transition: background-color 0.3s ease;
        position: relative;
        top: -30px; /* Adjust to align with the center of the circles */
        z-index: 0; /* Ensure lines are behind circles */
    }

        .progress-line.passed {
            background-color: var(--orange-passed-line-color);
        }

    /* Adjustments for the button text color in the gradient button */
    .btn.bg-gradient-header {
        color: white !important; /* Ensure text is white for contrast */
    }


    /* Existing styles from your original code, ensure these are still present */
    .text-success-icon {
        color: #28a745; /* Bootstrap's success green */
    }

    .bg-light-gray {
        background-color: #f8f9fa; /* A very light gray */
    }

    .text-gray-800 {
        color: #343a40;
    }

    .text-gray-600 {
        color: #6c757d;
    }

    .text-gray-700 {
        color: #495057;
    }

    .text-orange-600 {
        color: #ea501c;
    }

    .text-3xl {
        font-size: 1.875rem;
        line-height: 2.25rem;
    }

    .text-4xl {
        font-size: 2.25rem;
        line-height: 2.5rem;
    }

    .text-6xl {
        font-size: 3.75rem;
        line-height: 1;
    }

    .text-xl {
        font-size: 1.25rem;
        line-height: 1.75rem;
    }

    .text-lg {
        font-size: 1.125rem;
        line-height: 1.75rem;
    }

    .font-bold {
        font-weight: 700;
    }

    .font-semibold {
        font-weight: 600;
    }

    .font-medium {
        font-weight: 500;
    }

    .mb-0 {
        margin-bottom: 0 !important;
    }

    .mb-2 {
        margin-bottom: 0.5rem !important;
    }

    .mb-3 {
        margin-bottom: 0.75rem !important;
    }

    .mb-4 {
        margin-bottom: 1rem !important;
    }

    .mb-5 {
        margin-bottom: 1.25rem !important;
    }

    .p-4 {
        padding: 1rem !important;
    }

    .p-5 {
        padding: 1.25rem !important;
    }

    .px-5 {
        padding-left: 1.25rem !important;
        padding-right: 1.25rem !important;
    }

    .py-3 {
        padding-top: 0.75rem !important;
        padding-bottom: 0.75rem !important;
    }

    .py-4 {
        padding-top: 1rem !important;
        padding-bottom: 1rem !important;
    }

    .rounded-lg {
        border-radius: 0.5rem !important;
    }

    .rounded-4 {
        border-radius: 1rem !important;
    }

    .rounded-top-4 {
        border-top-left-radius: 1rem !important;
        border-top-right-radius: 1rem !important;
    }

    .shadow-lg {
        box-shadow: 0 1rem 3rem rgba(0,0,0,.175) !important;
    }

    .d-flex {
        display: flex !important;
    }

    .justify-content-center {
        justify-content: center !important;
    }

    .gap-3 > * + * {
        margin-left: 0.75rem !important;
    }

    .mx-auto {
        margin-left: auto !important;
        margin-right: auto !important;
    }

    .max-w-md {
        max-width: 28rem !important;
    }

    .inline-block {
        display: inline-block !important;
    }

    .w-32 {
        width: 8rem !important;
    }

    .text-left {
        text-align: left !important;
    }

    .btn-outline-secondary {
        color: #6c757d;
        border-color: #6c757d;
    }

        .btn-outline-secondary:hover {
            background-color: #6c757d;
            color: #fff;
        }

    .hover-scale-105:hover {
        transform: scale(1.05);
    }

    .transition-all {
        transition-property: all;
        transition-duration: 200ms;
        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    }

    /* Responsive adjustments for smaller screens */
    @@media (max-width: 768px) {
        .d-flex.justify-content-center {
            flex-direction: column;
            align-items: center;
        }

        .gap-3 > * + * {
            margin-left: 0 !important;
            margin-top: 0.75rem !important;
        }

        .shipment-progress-tracker {
            flex-direction: column;
            align-items: flex-start;
            margin: 2rem auto;
        }

        .progress-step {
            flex-direction: row;
            align-items: center;
            margin-bottom: 1.5rem; /* Space between vertical steps */
        }

        .icon-circle {
            margin-right: 1rem; /* Space between circle and label in vertical layout */
            margin-bottom: 0;
        }

        .progress-line {
            display: none; /* Hide lines in vertical layout for simplicity */
        }
    }
</style>