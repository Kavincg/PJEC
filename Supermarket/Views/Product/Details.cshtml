@model ShoppingCart
 
<div class="container" style="margin-top:100px">
<h1>Product Details</h1>

<form method="post" asp-controller="Product" asp-action="Details" enctype="multipart/form-data">
	<div class="card border-0 mt-4">
		<div class="card-header bg-body bg-gradient text-light py-4">
			<div class="row">
				<div class="col-12 d-flex justify-content-between">
					<h3 class="text-dark text-uppercase">@Model.Product.Name</h3>
					<h3 class="text-warning">₹ @(Model.Product.price.ToString("F2"))</h3>
				</div>
					<div>
						<h6 class="text-dark text-opacity-50 ">
							@{
								string categoryName = "No Category";
								if (@Model.Product.Category != null)
								{
									categoryName = @Model.Product.Category.Name.ToUpper();
								}
							}
							<span><b>Category:</b> @categoryName</span>
						</h6>
					</div>
			</div>
		</div>

		<div class="card-body">
			<div class="py-3">

				<div class="row">

					<div class="col-12 col-lg-3 offset-lg-1 text-center mb-1">
						<img id="ProfilePicture" alt="profile" src=~/img/@Model.Product.imgURL width="50%" class="rounded img-fluid catlogo card-img" style=" aspect-ratio: 1 / 1; object-fit: contain; background-color: white;" />
					</div>

					<div class=" row col-12 col-lg-6 offset-lg-1">

						<div class="row">
							<h6 class="text-dark fw-bold"> Description:</h6>
								<span class="text-secondary lh-sm"> @Html.Raw(@Model.Product.Description)</span>
						</div>

						<span asp-validation-for="quantity" class="text-danger"></span>
							<div class="row pl-2">
								<div class="col-md-6">
									<div class="input-group quantity-selector">
										<button type="button" class="btn btn-teal-outline minus-btn">-</button>
										<input asp-for="@Model.quantity" type="text" value="1" class="form-control text-center quantity-input" readonly />
										<button type="button" class="btn btn-teal-outline plus-btn">+</button>
									</div>
								</div>
							</div>
						<div class="row">
							<div class="col-12 col-md-6">
								<input asp-for="@Model.productId" hidden />
								<button type="submit" id="addToCartButton"
										class="btn btn-success bg-gradient  w-100 py-2 text-uppercase fw-semibold"
										onclick="return validateStock()">
									Add to Cart
								</button>
							</div>
							@if (TempData["ProductError"] != null)
							{
								<div class="text-danger">
									@TempData["ProductError"]
								</div>
							}
						</div>
					</div>
				</div>
			</div>
		</div>

		

	</div>
</form>

<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-dialog-centered">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="deleteModalLabel">Confirm Delete</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body">
				Are you sure you want to delete this Product?
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
				<button type="button" class="btn btn-danger" id="btnContinueToDelete">Delete</button>
			</div>
		</div>
	</div>
</div>
</div>

@section Scripts {
	<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

	<partial name="_ValidationScriptsPartial" />
	<script>
	
		document.addEventListener('DOMContentLoaded', () => {
			const quantityInput = document.querySelector('.quantity-input');
			const minusBtn = document.querySelector('.minus-btn');
			const plusBtn = document.querySelector('.plus-btn');

			// Quantity Selector Logic
			if (quantityInput && minusBtn && plusBtn) {
				minusBtn.addEventListener('click', () => {
					let currentQuantity = parseInt(quantityInput.value);
					if (currentQuantity > 1) { // Ensure quantity doesn't go below 1
						quantityInput.value = currentQuantity - 1;
					}
				});

				plusBtn.addEventListener('click', () => {
					let currentQuantity = parseInt(quantityInput.value);
					quantityInput.value = currentQuantity + 1;
				});
			}
		});
	</script>
}
